name: scalar-subquery
plan:
  __test: [ level: i ]
  version: { producer: validator-test }
  relations:
  - rel:
      project:
        input:
          read:
            baseSchema:
              names: [x]
              struct:
                nullability: NULLABILITY_REQUIRED
                types:
                - bool: { nullability: NULLABILITY_REQUIRED }
            namedTable: { names: [ test ] }
        expressions:
        - subquery:
            scalar:
              input:
                read:
                  baseSchema:
                    names: [x]
                    struct:
                      nullability: NULLABILITY_REQUIRED
                      types:
                      - string: { nullability: NULLABILITY_REQUIRED }
                  namedTable:
                    names:
                    - test2
          __test: [ type: string ]
        - subquery:
            scalar:
              input:
                read:
                  baseSchema:
                    names: [x, y]
                    struct:
                      nullability: NULLABILITY_REQUIRED
                      types:
                      - string: { nullability: NULLABILITY_REQUIRED }
                      - date: { nullability: NULLABILITY_REQUIRED }
                  namedTable:
                    names:
                    - test3
              __test: [ diag: { level: e, code: 6004, msg: "*subquery must return a single column*" } ]
