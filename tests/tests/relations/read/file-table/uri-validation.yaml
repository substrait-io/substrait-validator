name: read-files-uri-validation
plan:
  __test: [ level: i ]
  relations:
  - rel:
      read:
        baseSchema:
          names: [a]
          struct:
            nullability: NULLABILITY_REQUIRED
            types:
            - string: { nullability: NULLABILITY_REQUIRED }
        localFiles:
          items:
          - uriPath: "not a valid URI"
            uriPath__test: [ diag: { level: e, code: 4, msg: "*invalid path character*" } ]
            parquet: {}
          - uriPath: "a%20valid%20relative%20URI"
            parquet: {}
          - uriPath: "/path/to/local/file"
            parquet: {}
          - uriPath: "file:///path/to/local/file"
            parquet: {}
          - uriPath: "protocol://with.an.authority/path/goes/here"
            parquet: {}
          - uriPath: "protocol:urn"
            parquet: {}
          - uriPath: 'C:\windows\paths\are\not\uris'
            uriPath__test: [ diag: { level: e, code: 4, msg: "*invalid path character*" } ]
            parquet: {}
          - uriPath: 'file://C:/write/them/like/this'
            parquet: {}
          - uriPath: 'C:/or/like/this'
            parquet: {}
          - uriPathGlob: '/can/have/*/and/?/in/path/globs'
            parquet: {}
          - uriPathGlob: 'file:///can/have/*/and/?/in/path/globs'
            parquet: {}
          - uriPathGlob: '/character/classes/must/be/escaped/[cls]'
            uriPathGlob__test: [ diag: { level: e, code: 4, msg: "*invalid path character*" } ]
            parquet: {}
          - uriPathGlob: '/character/classes/must/be/escaped/%5Bcls%5D'
            parquet: {}
          - uriPathGlob: '/invalid/glob/syntax/%5Dcls%5B'
            uriPathGlob__test: [ diag: { level: e, code: 5, msg: "*invalid range pattern*" } ]
            parquet: {}
          - uriFile: "/path/to/local/file"
            parquet: {}
          - uriFolder: "/path/to/local/folder"
            parquet: {}
